FROM golang:alpine as builder

ARG IMAGINARY_VERSION=1.2.4
ARG GOLANGCILINT_VERSION=1.56.2

# Copy imaginary sources
WORKDIR /go/src

RUN apk add --no-cache --virtual .build-deps build-base vips-dev

RUN wget https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh -O-|sh -s -- -b "/usr/local/bin" v${GOLANGCILINT_VERSION}

COPY . .

RUN go mod tidy

RUN go test ./... -test.v -race -test.coverprofile=atomic .

# RUN golangci-lint run .

# Compile imaginary
RUN go build -a \
    -o /tmp/bin/imaginary \
    -ldflags="-s -w -h -X main.Version=${IMAGINARY_VERSION}"

FROM alpine:3.19

ARG IMAGINARY_VERSION

LABEL maintainer="tofuliang@gmail.com" \
      org.label-schema.description="Fast, simple, scalable HTTP microservice for high-level image processing with first-class Docker support" \
      org.label-schema.schema-version="1.0" \
      org.label-schema.url="https://github.com/tofuliang/imaginary" \
      org.label-schema.vcs-url="https://github.com/tofuliang/imaginary" \
      org.label-schema.version="${IMAGINARY_VERSION}"

COPY --from=builder /tmp/bin/imaginary /usr/local/bin/imaginary

# Install runtime dependencies
RUN apk add --virtual .runtime-deps $(ldd /usr/local/bin/imaginary 2>&1|grep "Error loading shared library"|grep -oE "lib[^[:space:]:]*"|grep -v library|awk '{print "so:"$1}')

# Server port to listen
ENV PORT 9000

# Drop privileges for non-UID mapped environments
USER nobody

# Run the entrypoint command by default when the container starts.
ENTRYPOINT ["/usr/local/bin/imaginary"]

# Expose the server TCP port
EXPOSE ${PORT}
